generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       String         @id @default(uuid())
  name     String
  email    String         @unique
  image    String?
  password String?
  is_oauth Boolean        @default(false)
  created_at     DateTime?       @default(now())
  groups   GroupMember[]
  admin    Group[]
  expenses Expense[]
  payer    ExpensePayer[]
}

model Group {
  id       String         @id @default(uuid())
  name     String
  created_at     DateTime?       @default(now())
  admin    User           @relation(fields: [admin_id], references: [id])
  admin_id String
  expenses Expense[]
  members  GroupMember[]
}

model GroupMember {
  group    Group          @relation(fields: [group_id], references: [id])
  group_id String
  user     User           @relation(fields: [user_id], references: [id])
  user_id  String

  @@id([group_id, user_id])
}

model Expense {
  id          String        @id @default(uuid())
  description String
  total       Float
  is_paid     Boolean       @default(false)
  created_at        DateTime?      @default(now())
  payee       User          @relation(fields: [payee_id], references: [id])
  payee_id    String
  group       Group         @relation(fields: [group_id], references: [id])
  group_id    String
  payers      ExpensePayer[]
}

model ExpensePayer {
  user       User           @relation(fields: [user_id], references: [id])
  user_id    String
  expense    Expense        @relation(fields: [expense_id], references: [id])
  expense_id String
  is_paid    Boolean        @default(false)
  amount     Float

  @@id([user_id, expense_id])
}
